info:
  title: goezswag api
  version: 1.0.0-beta
  description: goezswag is a easy swagger
openapi: 3.0.0
paths:
  /v1/dummy/getarray:
    get:
      summary: retrieves a list of accountHolders
      tags:
      - list
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountHolder'
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paymentz'
        "500":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
  /v1/dummy/route:
    get:
      summary: get account holder
      tags:
      - get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolder'
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paymentz'
        "500":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
    post:
      summary: create a dummy route
      tags:
      - create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyDummyModel'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
  /v2/dummy/route:
    post:
      summary: create a dummy route WITH ARRAY IN BODY
      tags:
      - create
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MyDummyModel'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDummyModelResponse'
components:
  schemas:
    AccountHolder:
      properties:
        age:
          type: integer
          description: the age of the person
        bankaccount:
          $ref: '#/components/schemas/BankAc'
        name:
          type: string
          description: the name of the person
        surname:
          type: string
          description: the surname of the person
        weight:
          type: number
          description: the weight of this person
      example:
        age: 25
        bankaccount: true
        name: renato
        surname: stocco
        weight: 73.2
    BankAc:
      properties:
        destination:
          type: boolean
    IncomingTransferRequest:
      properties:
        longitude:
          type: number
        metadata:
          type: object
        payment_details:
          $ref: '#/components/schemas/Paymentz'
        source_holder:
          $ref: '#/components/schemas/AccountHolder'
    MyDummyModel:
      properties:
        aeho:
          $ref: '#/components/schemas/NestedVal'
        aeho_arrat:
          type: array
          items:
            $ref: '#/components/schemas/NestedVal'
        field_four:
          type: string
          description: field is the number four
        field_one:
          type: string
          description: field is the number one
        inc_request:
          $ref: '#/components/schemas/IncomingTransferRequest'
    MyDummyModelResponse:
      properties:
        amount:
          type: integer
        amount_double:
          type: number
          description: field double is of course doubl
      example:
        amount_double: 53.21
    NestedVal:
      properties:
        field_bool:
          type: boolean
          description: field bool is always boolean
        field_x:
          type: string
          description: field x is the best
        field_y:
          type: integer
          description: field y is integer
        field_zeta:
          type: integer
          description: field is always positive
      example:
        field_bool: true
        field_x: best
        field_y: -42
        field_zeta: 1
    Paymentz:
      properties:
        type:
          type: string
